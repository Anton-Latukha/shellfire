# This file is part of shellfire. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/shellfire/master/COPYRIGHT. No part of shellfire, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of shellfire. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/shellfire/master/COPYRIGHT.


byte_bit()
{
   local -i value=${1:-0}
   local -i bit=${2-0}
   local -i bitMask=$(( 1 << bit ))
   echo -n $(( value & bitMask ? 1 : 0 ))
}

byte_isBitSet()
{
   return $(( 1 - $(byte_bit "$@") ))
}

# could also assign to a variable using printf syntax (printf -v VAR '%s' $binaryValue)
byte_printBinary()
{
	local binaryValue
	local -i bit
	for ((bit=7; bit!=-1; bit--))
	do
		binaryValue=${binaryValue}$(byte_bit $1 $bit)
	done
	printf '%s' $binaryValue
}

byte_setBit()
{
	local -i binaryValue=$1
	local -i bit=$2
	
	echo -n $(( 1 << bit | binaryValue ))
}
