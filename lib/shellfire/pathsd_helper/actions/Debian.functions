# This file is part of shellfire. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/shellfire/master/COPYRIGHT. No part of shellfire, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of shellfire. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/shellfire/master/COPYRIGHT.


core_usesIn pathsd_helper actions

core_dependency_requires 'Debian' apt-file
pathsd_helper_actions_Debian_start()
{
	pathsd_helper_actions_createTemporaryFileOnce
	
	pathsd_helper_actions_createDependencyFolder
	
	set +f
	set -- ~/.cache/apt-file/*
	set -f
	
	local updateAptFileCache
	case $# in
		
		0)
			updateAptFileCache=1
		;;
		
		1)
			if [ ! -f "$1" ]; then
				updateAptFileCache=1
			else
				updateAptFileCache=0
			fi	
		;;
		
		*)
			updateAptFileCache=0
		;;
		
	esac
	
	if [ $updateAptFileCache -eq 1 ]; then
		core_message NOTICE "Updating apt-file cache, may be quite slow"
		apt-file update
	fi
}

pathsd_helper_actions_Debian_operate()
{
	if pathsd_helper_actions_guardOverwrite; then
		return 0
	fi
	
	case "$programName" in
		
		awk)
			pathsd_helper_actions_writePathFileOverride 'gawk' '/usr/bin/gawk'
			return 0
		;;
		
		brew|brew-rmtree)
			core_message INFO "Ignoring program '$programName'"
			return 0
		;;
		
		'c++filt')
			pathsd_helper_actions_writePathFileOverride 'binutils'
			return 0
		;;
		
		addr2line|ar|nm|objcopy|objdump|ranlib|readelf|size|strings|strip)
			pathsd_helper_actions_writePathFileOverride 'binutils-multiarch'
			return 0
		;;
		
		uptime)
			pathsd_helper_actions_writePathFileOverride 'procps'
			return 0
		;;
		
		# Note, not fakeroot-ng, which needs porting to Mac OS X Homebrew
		fakeroot)
			pathsd_helper_actions_writePathFileOverride 'fakeroot' '/usr/bin/fakeroot-sysv'
			return 0
		;;
		
		zcat|zcmp|zdiff|zegrep|zfgrep|zgrep)
			pathsd_helper_actions_writePathFileOverride 'gzip' "/bin/${programName}"
			return 0
		;;
		
		lzcat|lzcmp|lzdiff|lzegrep|lzfgrep|lzgrep|lzless|lzma|lzmore|unlzma)
			pathsd_helper_actions_writePathFileOverride 'xz-utils'
			return 0
		;;
		
		# Also unrar-free
		unrar)
			pathsd_helper_actions_writePathFileOverride 'unrar'
			return 0
		;;
		
		# Ubuntu doesn't install these symlinks that chanhge pbzip2's behaviour; we fake them as we create a false path full of symlinks.
		pbunzip2|pbzcat)
			pathsd_helper_actions_writePathFileOverride 'pbzip2' "/usr/bin/pbzip2"
			return 0
		;;
		
	esac
	
	
	local pathPrefix
	local absolutePath
	local lineCount
	local packageName
	local firstPackageName
	for pathPrefix in 'bin' 'sbin' 'usr/bin' 'usr/sbin'
	do
		absolutePath=/"${pathPrefix}"/"${programName}"
		# Irritaingly, apt-file does not use a non-zero exit code for no matches; it returns a blank line for no matches; it outputs a trailing blank line if there are matches
		apt-file --non-interactive --package-only --regexp search "^${absolutePath}$" >"$pathsd_helper_actions_temporaryFilePath"
		lineCount=0
		packageName=''
		firstPackageName=''
		while IFS='' read -r packageName
		do
			lineCount=$((lineCount+1))
			if [ $lineCount -eq 1 ]; then
				firstPackageName="$packageName"
			fi
		done <"$pathsd_helper_actions_temporaryFilePath"
		
		case $lineCount in
			
			0)
				continue
			;;
			
			1)
				# Irritaingly, apt-file returns a blank line for no matches
				if [ -z "$firstPackageName" ]; then
					continue
				fi
				
				pathsd_helper_actions_writePathFile "$programName" "$firstPackageName" "$absolutePath"
				return 0
			;;
			
			2)
				core_message WARN "Too many packages found for progam '$programName' for path '$absolutePath' using apt-file --non-interactive --package-only --regexp search '^${absolutePath}$'"
				return 0
			;;
			
		esac
	done
	
	core_message WARN "No packages found for progam '$programName'"
}

pathsd_helper_actions_Debian_finish()
{
	:
}
